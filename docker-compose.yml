services:
  # PHP Service
  app:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    container_name: laravel-app
    restart: unless-stopped
    tty: true
    user: www-data
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www/html
    volumes:
      - ./src:/var/www/html
      - laravel-storage:/var/www/html/storage
      - laravel-bootstrap-cache:/var/www/html/bootstrap/cache
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "php", "-v"]
      interval: 30s
      timeout: 10s
      retries: 3
    # Set proper permissions at container startup
    command: >
      bash -c "
        if [ ! -d /var/www/html/vendor ]; then
          composer install --no-interaction --no-progress
        fi &&
        php artisan optimize &&
        php-fpm"

  # Nginx Service
  nginx:
    image: nginx:alpine
    container_name: laravel-nginx
    restart: unless-stopped
    tty: true
    ports:
      - "7890:80"
    volumes:
      - ./src:/var/www/html:ro
      - laravel-storage:/var/www/html/storage:ro
      - laravel-bootstrap-cache:/var/www/html/bootstrap/cache:ro
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - app-network
    depends_on:
      app:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MySQL Service
  mysql:
    image: mysql:8.0
    container_name: laravel-mysql
    restart: unless-stopped
    tty: true
    ports:
      - "7891:3306"
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_USER: laravel
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: secret
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Composer Service
  composer:
    image: composer:latest
    container_name: laravel-composer
    user: "1000:1000"  # Default user ID for most Linux systems
    volumes:
      - ./src:/var/www/html
      - laravel-storage:/var/www/html/storage
      - laravel-bootstrap-cache:/var/www/html/bootstrap/cache
      - composer-cache:/tmp/composer-cache
    environment:
      - COMPOSER_CACHE_DIR=/tmp/composer-cache
    working_dir: /var/www/html
    depends_on:
      app:
        condition: service_healthy
    networks:
      - app-network
    entrypoint: ['composer']
    profiles: ['tools']

# Networks
networks:
  app-network:
    driver: bridge

# Volumes
volumes:
  mysql-data:
    driver: local
  laravel-storage:
    driver: local
  laravel-bootstrap-cache:
    driver: local
  composer-cache:
    driver: local
